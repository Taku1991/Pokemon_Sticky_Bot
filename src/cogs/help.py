import discord
from discord import app_commands
from discord.ext import commands
import logging

class HelpView(discord.ui.View):
    """Interactive Help View mit Buttons f√ºr verschiedene Kategorien"""
    
    def __init__(self):
        super().__init__(timeout=300)  # 5 Minuten Timeout
    
    @discord.ui.button(label="üîê Admin Commands", style=discord.ButtonStyle.primary)
    async def admin_help(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="üîê Administrator Commands",
            description="Befehle f√ºr Bot-Master und Server-Verwaltung",
            color=0x5865F2
        )
        
        embed.add_field(
            name="/setup_botmaster",
            value="‚Ä¢ Macht dich zum ersten Bot-Master auf dem Server\n‚Ä¢ Nur einmal pro Server m√∂glich\n‚Ä¢ Danach k√∂nnen weitere Master hinzugef√ºgt werden",
            inline=False
        )
        
        embed.add_field(
            name="/add_editor @benutzer",
            value="‚Ä¢ Gibt einem Benutzer Bot-Editor Rechte\n‚Ä¢ Nur Bot-Master k√∂nnen das\n‚Ä¢ Editoren k√∂nnen Sticky Messages verwalten",
            inline=False
        )
        
        embed.add_field(
            name="/remove_editor @benutzer",
            value="‚Ä¢ Entfernt Bot-Editor Rechte\n‚Ä¢ Nur Bot-Master k√∂nnen das",
            inline=False
        )
        
        embed.add_field(
            name="/list_roles",
            value="‚Ä¢ Zeigt alle Bot-Master und Editoren des Servers\n‚Ä¢ F√ºr alle sichtbar",
            inline=False
        )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @discord.ui.button(label="üìå Sticky Commands", style=discord.ButtonStyle.success)
    async def sticky_help(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="üìå Sticky Message Commands",
            description="Befehle f√ºr persistente Nachrichten (Bot-Master + Editoren)",
            color=0x57F287
        )
        
        embed.add_field(
            name="/set_sticky",
            value="‚Ä¢ Erstellt eine neue Sticky Message f√ºr den aktuellen Channel\n‚Ä¢ √ñffnet ein Formular zum Ausf√ºllen\n‚Ä¢ Mindestens 5 Sekunden Verz√∂gerung",
            inline=False
        )
        
        embed.add_field(
            name="/edit_sticky",
            value="‚Ä¢ Bearbeitet die Sticky Message des aktuellen Channels\n‚Ä¢ √ñffnet Formular mit aktuellen Werten\n‚Ä¢ Falls keine Sticky vorhanden: Fehlermeldung",
            inline=False
        )
        
        embed.add_field(
            name="/remove_sticky",
            value="‚Ä¢ L√∂scht die Sticky Message aus dem aktuellen Channel\n‚Ä¢ Permanent - kann nicht r√ºckg√§ngig gemacht werden",
            inline=False
        )
        
        embed.add_field(
            name="/sticky_list",
            value="‚Ä¢ Zeigt alle aktiven Sticky Messages auf dem Server\n‚Ä¢ Mit Channel-Namen und Einstellungen",
            inline=False
        )
        
        embed.add_field(
            name="/update_sticky_time [sekunden]",
            value="‚Ä¢ √Ñndert nur die Verz√∂gerung einer bestehenden Sticky\n‚Ä¢ Minimum: 5 Sekunden\n‚Ä¢ Wirkt sofort",
            inline=False
        )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @discord.ui.button(label="üí° Tipps & Tricks", style=discord.ButtonStyle.secondary)
    async def tips_help(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="üí° Tipps & Tricks f√ºr StickyBot",
            description="N√ºtzliche Hinweise f√ºr die optimale Nutzung",
            color=0xFAA61A
        )
        
        embed.add_field(
            name="üéØ Sticky Messages Funktionsweise",
            value="‚Ä¢ Erscheinen automatisch nach jeder normalen Nachricht\n‚Ä¢ L√∂schen automatisch die vorherige Sticky\n‚Ä¢ Immer am Ende des Channels sichtbar\n‚Ä¢ Enthalten zuf√§llige Pok√©mon-Bilder",
            inline=False
        )
        
        embed.add_field(
            name="‚ö° Performance-Tipps",
            value="‚Ä¢ Nicht zu kurze Verz√∂gerungen verwenden (min. 10-15s empfohlen)\n‚Ä¢ Maximal 2-3 Sticky Messages pro Server\n‚Ä¢ Kurze, pr√§gnante Nachrichten sind besser",
            inline=False
        )
        
        embed.add_field(
            name="üîß Troubleshooting",
            value="‚Ä¢ Sticky erscheint nicht? Pr√ºfe Berechtigungen des Bots\n‚Ä¢ Commands funktionieren nicht? `/list_roles` √ºberpr√ºfen\n‚Ä¢ Bot reagiert nicht? Administrator kontaktieren",
            inline=False
        )
        
        embed.add_field(
            name="üé® Message-Formatting",
            value="‚Ä¢ **Fett**, *Kursiv*, ~~Durchgestrichen~~\n‚Ä¢ Links werden automatisch erkannt\n‚Ä¢ Emojis funktionieren normal",
            inline=False
        )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)

class HelpCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="help", description="üìã Zeigt alle verf√ºgbaren Befehle")
    async def help_command(self, interaction: discord.Interaction):
        """Zeigt alle verf√ºgbaren Befehle mit interaktivem Interface"""
        try:
            embed = discord.Embed(
                title="üìã StickyBot - Hilfe & Befehle",
                description=f"Willkommen zum StickyBot Help Center! üéâ\n\n"
                           f"**Server:** {interaction.guild.name}\n"
                           f"**Deine Rolle:** {'Bot-Master' if self.is_bot_admin(interaction.user.id, interaction.guild.id) else 'Bot-Editor' if self.is_bot_editor(interaction.user.id, interaction.guild.id) else 'Normal'}\n\n"
                           f"üìå **Was ist StickyBot?**\n"
                           f"StickyBot erstellt persistente Nachrichten, die nach jeder normalen Nachricht automatisch erneut gesendet werden. Perfect f√ºr Regeln, Ank√ºndigungen oder wichtige Informationen!",
                color=0x5865F2
            )
            
            # Admin Commands
            admin_commands = [
                "`/setup_botmaster` - Erstmalige Bot-Master Registrierung",
                "`/add_editor @user` - Editor-Rechte vergeben",
                "`/remove_editor @user` - Editor-Rechte entziehen", 
                "`/list_roles` - Alle Berechtigungen anzeigen"
            ]
            
            embed.add_field(
                name="üîê Admin Commands (Nur Bot-Master)",
                value="\n".join(admin_commands),
                inline=False
            )
            
            # Sticky Commands
            sticky_commands = [
                "`/set_sticky` - Neue Sticky Message erstellen",
                "`/edit_sticky` - Sticky des Channels bearbeiten",
                "`/remove_sticky` - Sticky des Channels l√∂schen",
                "`/sticky_list` - Alle Sticky Messages anzeigen",
                "`/update_sticky_time [sek]` - Verz√∂gerung √§ndern"
            ]
            
            embed.add_field(
                name="üìå Sticky Message Commands (Botmaster + Editoren)",
                value="\n".join(sticky_commands),
                inline=False
            )
            
            embed.add_field(
                name="‚ÑπÔ∏è Wichtige Hinweise",
                value="‚Ä¢ Benutze `/setup_botmaster` um Bot-Master zu werden\n"
                      "‚Ä¢ Bot-Master k√∂nnen Editoren verwalten\n"
                      "‚Ä¢ Jeder Server hat eigene Berechtigungen\n"
                      "‚Ä¢ Mindestens 5 Sekunden Verz√∂gerung f√ºr Sticky Messages",
                inline=False
            )
            
            embed.set_footer(text="üí° Klicke auf die Buttons f√ºr detaillierte Hilfe zu einzelnen Kategorien")
            
            # Buttons f√ºr detaillierte Hilfe
            view = HelpView()
            await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
            
        except Exception as e:
            logging.error(f"Fehler beim Anzeigen der Hilfe: {e}")
            if not interaction.response.is_done():
                await interaction.response.send_message(
                    "‚ùå Ein Fehler ist beim Laden der Hilfe aufgetreten.", 
                    ephemeral=True
                )
    
    def is_bot_admin(self, user_id, guild_id):
        """Pr√ºft ob User Bot Admin ist"""
        try:
            from src.utils.permissions import is_bot_admin
            return is_bot_admin(user_id, guild_id)
        except:
            return False
    
    def is_bot_editor(self, user_id, guild_id):
        """Pr√ºft ob User Bot Editor ist"""
        try:
            from src.utils.permissions import is_bot_editor
            return is_bot_editor(user_id, guild_id)
        except:
            return False

async def setup(bot):
    await bot.add_cog(HelpCog(bot))